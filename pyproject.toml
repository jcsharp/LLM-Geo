[project]
name = "llm-geo"
version = "0.1.0"
description = "Autonomous GIS: the next-generation AI-powered GIS"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "aiohttp>=3.10.5",
    "async-timeout>=4.0.3",
    "certifi>=2024.7.4",
    "frozenlist>=1.4.1",
    "ipython-genutils>=0.2.0",
    "jsonpickle>=3.2.2",
    "multidict>=6.0.5",
    "munkres>=1.1.4",
    "numpy>=2.1.0",
    "openai>=1.42.0",
    "pyvis>=0.3.2",
    "pywin32>=306",
    "scipy>=1.14.1",
    "seaborn>=0.13.2",
    "statsmodels>=0.14.2",
    "tqdm>=4.66.5",
    "requests>=2.32.3",
    "pyproj>=3.6.1",
    "pyogrio>=0.9.0",
    "shapely>=2.0.4",
    "geopandas>=1.0.1",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.uv]
dev-dependencies = [
    "ipykernel>=6.29.5",
    "pyright>=1.1.377",
    "ruff>=0.6.1",
    "pymarkdownlnt>=0.9.22",
]

[tool.ruff]
respect-gitignore = true

[tool.ruff.lint]
extend-select = ["I"]
exclude = ["*.ipynb"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "lf"

[tool.pyright]
include = ["llm_geo"]
exclude = []

[tool.poe.tasks]

[tool.poe.tasks.build]
cmd = "uvx --from build pyproject-build --installer uv --source"
help = "Build the package"

[tool.poe.tasks.env]
shell = "env | sort -f"
help = "Shows the environment variables in the uv environment"
# envfile = ".env"

[tool.poe.tasks.format-isort]
cmd = "ruff check --select I --fix ."
help = "Sort and format the modules import statements"

[tool.poe.tasks.format-code]
cmd = "ruff format ."
help = "Run the ruff code formatter on the code base"

[tool.poe.tasks.format]
help = "Run all the formating tools on the code base"
sequence = ["format-isort", "format-code"]

[tool.poe.tasks.lint]
cmd = "ruff check"
help = "Run the linter"

[tool.poe.tasks.types]
cmd = "pyright"
help = "Run the static type checker"

[tool.poe.tasks.style-markdown]
cmd = "pymarkdown -d MD013 scan ."
help = "Validate markdown code"

[tool.poe.tasks.style-python]
cmd = "ruff format --check ."
help = "Validate code style"

[tool.poe.tasks.style]
help = "Validate code style"
sequence = ["style-markdown", "style-python"]

[tool.poe.tasks.check]
help = "Run all checks on the code base"
sequence = ["style", "types", "lint"]

[tool.poe.tasks.fcheck]
help = "Format code and run all checks"
sequence = ["format", "style-markdown", "types", "lint"]
